/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.employee.action;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBMonth;
import com.dtac.admin.data.DBYear;
import com.dtac.employee.data.DBCalendar;
import com.dtac.employee.form.CalendarForm;
import com.dtac.utils.DateUtil;
/** 
 * MyEclipse Struts
 * Creation date: 10-10-2011
 */
public class CalendarListStartAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) 
	throws Exception {	//12-06-2012
		String loginId	= "";
		String appCode 	= "hr32";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId,appCode,"disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			CalendarForm calendarForm = (CalendarForm) form;
			calendarForm.initial();
			
			String year		= "";
			String engYear	= "";
			String month	= "";
			String days		= "";
			String salTypeCode = "1";
			String workDate	= "";
			
			if (session.getAttribute("salTypeCode") != null) salTypeCode = (String) session.getAttribute("salTypeCode");
			if (session.getAttribute("engYear") != null) 	engYear = (String) session.getAttribute("engYear");
			if (session.getAttribute("month") != null) 		month = (String) session.getAttribute("month");
			
			DBYear dbYear 	= new DBYear();
			List yearList	= dbYear.GetYearList("", "");
			if (yearList.size() > 0) request.setAttribute("yearList", yearList);
			
			DBMonth dbMonth = new DBMonth();
			List monthList = dbMonth.GetMonthList();
			if (monthList.size() > 0) request.setAttribute("monthList", monthList);
			
			DateUtil dateUtil = new DateUtil();
			year	= dateUtil.curTHYear();
			if (month.equals("")) 	month	= dateUtil.curMonth();
			if (engYear.equals("")) engYear	= String.valueOf(Integer.parseInt(year)-543);
						
			DBCalendar dbCalendar = new DBCalendar();
			int maxDayInMonth = dateUtil.maxDayForMonth(engYear, month);
			
			if (!dbMonth.CheckMonthChk(year, month)) {				
				dbMonth.AddMonthChk(year, month);
				
				for (int i=1; i<=maxDayInMonth; i++) {
					days = String.valueOf(i);
					if (days.trim().length() == 1) days = "0"+days.trim();
					
					workDate = days+"/"+month+"/"+engYear;
					int dayNo = dateUtil.dayOfWeek(engYear, month, days);
					dbCalendar.AddCalendar(workDate, dayNo);
				}
			}
			days = String.valueOf(maxDayInMonth);
			
			List calendarList = dbCalendar.GetCalendarList(engYear, month, days, salTypeCode);
			if (calendarList.size() > 0) request.setAttribute("calendarList", calendarList);
						
			calendarForm.setSalTypeCode(salTypeCode);
			calendarForm.setEngYear(engYear);
			calendarForm.setYear(year);
			calendarForm.setMonth(month);

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward("success");
	}
}