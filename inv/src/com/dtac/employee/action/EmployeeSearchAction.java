/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.employee.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBMasterTable;
import com.dtac.admin.data.DBMemberType;
import com.dtac.employee.data.DBEmployee;
import com.dtac.employee.form.EmployeeForm;
/** 
 * MyEclipse Struts
 * Creation date: 17-05-2012
 */
public class EmployeeSearchAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();		
		map.put("employeeform.button.search",	"search");
		return map;
	}

	public ActionForward search(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //30-09-2011
		String forwardText = "success";
		String loginId 		= "";
		//String appCode  	= "hr21";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			/*DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}*/

			EmployeeForm employeeForm = (EmployeeForm) form;
			String empID		= employeeForm.getEmpID().toUpperCase();
			String empNameT		= new String(employeeForm.getEmpNameT().getBytes("ISO8859_1"),"utf-8");
			String empLastNameT	= new String(employeeForm.getEmpLastNameT().getBytes("ISO8859_1"),"utf-8");
			String empTypeCode	= employeeForm.getEmpTypeCode();			
			String empDeptCode	= employeeForm.getEmpDeptCode();
			//String workDate		= employeeForm.getWorkDate();
			String status		= employeeForm.getStatus();
			
			DBEmployee dbEmployee = new DBEmployee();
			List employeeList = dbEmployee.GetEmployeeList(empID, empNameT, empLastNameT, empTypeCode, empDeptCode, "", status);
			if (employeeList.size() > 0) request.setAttribute("employeeList", employeeList);
			
			DBMemberType dbMemberType = new DBMemberType();
			List memberTypeList = dbMemberType.GetMemberTypeList("", "", "");
			if (memberTypeList.size() > 0) request.setAttribute("memberTypeList", memberTypeList);
			
			DBMasterTable dbMasterTable = new DBMasterTable();
			List deptList = dbMasterTable.GetMasterTableDTList("dept", "", "", "AC");
			if (deptList.size() > 0) request.setAttribute("deptList", deptList);
			
			employeeForm.setEmpLastNameT(empLastNameT);
			employeeForm.setEmpNameT(empNameT);
			session.setAttribute("empTypeCode", empTypeCode);
			session.setAttribute("empDeptCode", empDeptCode);
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
}