/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.employee.action;
import java.util.HashMap;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBYear;
import com.dtac.employee.data.DBPeriod;
import com.dtac.employee.form.PeriodForm;
/** 
 * MyEclipse Struts
 * Creation date: 20-08-2012
 */
public class PeriodListAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();
		map.put("periodform.button.search", 	"search");
		map.put("periodform.button.update", 	"update");		
		return map;
	}
	
	public ActionForward search(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) 
	throws Exception {	//20-08-2012
		String loginId		= "";
		String appCode 		= "hr31";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId,appCode,"disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			PeriodForm periodForm = (PeriodForm) form;
			String year  	= periodForm.getYear();
			String salTypeCode = periodForm.getSalTypeCode();
			
			DBYear dbYear = new DBYear();
			List yearList = dbYear.GetYearList("", "");
			if (yearList.size() > 0) request.setAttribute("yearList", yearList);
			
			DBPeriod dbPeriod 	= new DBPeriod();			
			List periodList = dbPeriod.GetPeriodList(year, "", "", salTypeCode, "");
			if (periodList.size() == 0) { 
				dbPeriod.AddAutoPeriod(year, "1", salTypeCode);
				dbPeriod.AddAutoPeriod(year, "2", salTypeCode);
				
				periodList = dbPeriod.GetPeriodList(year, "", "", salTypeCode, "");
			} 
			request.setAttribute("periodList", periodList);
			
			session.setAttribute("year", year);
			session.setAttribute("salTypeCode", salTypeCode);
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward("success");
	}
	public ActionForward update(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) 
	throws Exception {	//18-08-2012
		String loginId		= "";
		String appCode 		= "hr31";
		String forwardText  = "update";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId,appCode,"mant")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			PeriodForm periodForm = (PeriodForm) form;
			String year  	= periodForm.getYear();
			String month	= periodForm.getMonth();
			String periodNo	= periodForm.getPeriodNo();
			String salTypeCode = periodForm.getSalTypeCode();
			
			DBYear dbYear = new DBYear();
			List yearList = dbYear.GetYearList("", "");
			if (yearList.size() > 0) request.setAttribute("yearList", yearList);
			
			DBPeriod dbPeriod = new DBPeriod();
			List periodList = dbPeriod.GetPeriodList(year, month, periodNo, salTypeCode, "");
			if (periodList.size() == 1) {
				PeriodForm periodInfo = (PeriodForm) periodList.get(0);
				periodForm.setSalTypeName(periodInfo.getSalTypeName());
				periodForm.setSocialRate(periodInfo.getSocialRate());
				periodForm.setStartDate(periodInfo.getStartDate());
				periodForm.setEndDate(periodInfo.getEndDate());
				periodForm.setCurrFlag(periodInfo.getCurrFlag());
				periodForm.setStatus(periodInfo.getStatus());
				
			} else {
				request.setAttribute("alertMessage", "select item!");
				forwardText	= "success";
				
				periodList = dbPeriod.GetPeriodList(year, "", "", salTypeCode, "");
				if (periodList.size() > 0) request.setAttribute("periodList", periodList);
			}

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
}