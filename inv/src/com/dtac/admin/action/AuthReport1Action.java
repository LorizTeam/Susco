/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.admin.action;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.form.MemberAuthForm;
/**
 * MyEclipse Struts 
 * Creation date: 22-08-2012
 */
public class AuthReport1Action extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();
		map.put("memberform.button.print", "print");
		return map;
	}

	public ActionForward print(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { // 23-08-2012
		String forwardText 	= "print";
		String loginId 		= "";
		String appCode 		= "ad12";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage", "Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage", "Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage", "You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			MemberAuthForm memberAuthForm = (MemberAuthForm) form;
			String appType  = memberAuthForm.getAppType();
			String memberId = memberAuthForm.getMemberID();
			String reportNo = memberAuthForm.getReportNo();

			request.setAttribute("appType", appType);
			request.setAttribute("memberId", memberId);
			request.setAttribute("reportNo", reportNo);

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return mapping.findForward(forwardText);
	}
}