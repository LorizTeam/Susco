/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBMasterTable;
import com.dtac.inventory.data.DBExportExcelMaster;
import com.dtac.inventory.data.DBMatDocType;
import com.dtac.inventory.data.DBMaterial;
import com.dtac.inventory.data.DBMaterialType;
import com.dtac.inventory.data.DBWarehouse;
import com.dtac.inventory.form.MaterialForm;
import com.dtac.inventory.form.MaterialRecvForm;
import com.dtac.inventory.form.ReportForm;
import com.dtac.utils.DateUtil;
/** 
 * MyEclipse Struts
 * Creation date: 10-07-2012
 */
public class StockOnHandReportAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();
		
		map.put("report.button.print",	"stockonhand");
		map.put("report.button.search",	"Search");
		map.put("report.button.excel",	"excel");
		return map;
	}

	public ActionForward excel(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //13-07-2012
		String forwardText 	= "excel";
		String loginId 		= "";
		String appCode  	= "mmr2";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			ReportForm reportForm = (ReportForm) form;
			String docDate 		= reportForm.getDocDate();
			String matTypeCode	= reportForm.getMatTypeCode();
			String matGrpCode	= reportForm.getMatGrpCode();
			String matStuffCode	= reportForm.getMatStuffCode();
			String stockOnHand	= reportForm.getStockOnHand();
			String alertMessage	= "";
			if(request.getParameterValues("stockOnHand")==null) {
				
				DBMaterialType dbMaterialType = new DBMaterialType();
				String matTypeName = dbMaterialType.GetMaterialTypeName(matTypeCode);
				List matTypeList = dbMaterialType.GetMaterialTypeList("");
				if (matTypeList.size() > 0) request.setAttribute("matTypeList", matTypeList);

		//		String matGrpName = dbMaterialType.GetMaterialGrpName(matTypeCode, matGrpCode, "");
				List matGrpList = dbMaterialType.GetMaterialGrpList(matTypeCode, "", "AC");
				if (matGrpList.size() > 0 && !matTypeCode.equals("")) request.setAttribute("matGrpList", matGrpList);
				
				DBMasterTable dbMasterTable = new DBMasterTable();
				List stuffList = dbMasterTable.GetMasterTableDTList("stuf", "", "", "AC");
				if (stuffList.size() > 0) request.setAttribute("stuffList", stuffList);
				
				alertMessage = "กรุณาระบุ ประเภท Stock On Hand";
				request.setAttribute("alertMessage", alertMessage);
				forwardText 	= "success";
			}else{
			
			DateUtil dateUtil = new DateUtil();
		if(!docDate.equals("")){
			request.setAttribute("docDate", dateUtil.CnvToYYYYMMDDEngYear(docDate, '-'));
		}else if(docDate.equals("")&&stockOnHand.equals("02")){
			DBMaterialType dbMaterialType = new DBMaterialType();
			String matTypeName = dbMaterialType.GetMaterialTypeName(matTypeCode);
			List matTypeList = dbMaterialType.GetMaterialTypeList("");
			if (matTypeList.size() > 0) request.setAttribute("matTypeList", matTypeList);

	//		String matGrpName = dbMaterialType.GetMaterialGrpName(matTypeCode, matGrpCode, "");
			List matGrpList = dbMaterialType.GetMaterialGrpList(matTypeCode, "", "AC");
			if (matGrpList.size() > 0 && !matTypeCode.equals("")) request.setAttribute("matGrpList", matGrpList);
			
			DBMasterTable dbMasterTable = new DBMasterTable();
			List stuffList = dbMasterTable.GetMasterTableDTList("stuf", "", "", "AC");
			if (stuffList.size() > 0) request.setAttribute("stuffList", stuffList);
			
			alertMessage = "กรุณาระบุ วัน เดือน ปี";
			request.setAttribute("alertMessage", alertMessage);
			forwardText 	= "success";
		}
				
			request.setAttribute("matTypeCode", matTypeCode);
			request.setAttribute("matGrpCode", matGrpCode);
			request.setAttribute("matStuffCode", matStuffCode);
			request.setAttribute("loginId", loginId);
			request.setAttribute("stockOnHand", stockOnHand);
	}
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
	public ActionForward stockonhand(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
		throws Exception { //13-07-2012
			String forwardText 	= "print";
			String loginId 		= "";
			String appCode  	= "mmr2";
			try {
				HttpSession session = request.getSession();
				if (session.isNew()) {
					session.invalidate();
					request.setAttribute("alertMessage","Session Timeout. Login again.");
					return mapping.findForward("relogin");
				} else {
					loginId = (String) session.getAttribute("loginId");
					if (loginId == null) {
						request.setAttribute("alertMessage","Please Login.");
						return mapping.findForward("relogin");
					}
				}
				DBLogin dbLogin = new DBLogin();			
				if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
					request.setAttribute("alertMessage","You don't have authorize.");
					return mapping.findForward("alertmsg");
				}

				ReportForm reportForm = (ReportForm) form;
				String docDate 		= reportForm.getDocDate();
				String matTypeCode	= reportForm.getMatTypeCode();
				String matGrpCode	= reportForm.getMatGrpCode();
				String matStuffCode	= reportForm.getMatStuffCode();
				String stockOnHand	= reportForm.getStockOnHand();
				String alertMessage	= "";
				if(request.getParameterValues("stockOnHand")==null) {
					
					DBMaterialType dbMaterialType = new DBMaterialType();
					String matTypeName = dbMaterialType.GetMaterialTypeName(matTypeCode);
					List matTypeList = dbMaterialType.GetMaterialTypeList("");
					if (matTypeList.size() > 0) request.setAttribute("matTypeList", matTypeList);

			//		String matGrpName = dbMaterialType.GetMaterialGrpName(matTypeCode, matGrpCode, "");
					List matGrpList = dbMaterialType.GetMaterialGrpList(matTypeCode, "", "AC");
					if (matGrpList.size() > 0 && !matTypeCode.equals("")) request.setAttribute("matGrpList", matGrpList);
					
					DBMasterTable dbMasterTable = new DBMasterTable();
					List stuffList = dbMasterTable.GetMasterTableDTList("stuf", "", "", "AC");
					if (stuffList.size() > 0) request.setAttribute("stuffList", stuffList);
					
					alertMessage = "กรุณาระบุ ประเภท Stock On Hand";
					request.setAttribute("alertMessage", alertMessage);
					forwardText 	= "success";
				}else{
				
				DateUtil dateUtil = new DateUtil();
			if(!docDate.equals("")){
				request.setAttribute("docDate", dateUtil.CnvToYYYYMMDDEngYear(docDate, '-'));
			}else if(docDate.equals("")&&stockOnHand.equals("02")){
				DBMaterialType dbMaterialType = new DBMaterialType();
				String matTypeName = dbMaterialType.GetMaterialTypeName(matTypeCode);
				List matTypeList = dbMaterialType.GetMaterialTypeList("");
				if (matTypeList.size() > 0) request.setAttribute("matTypeList", matTypeList);

		//		String matGrpName = dbMaterialType.GetMaterialGrpName(matTypeCode, matGrpCode, "");
				List matGrpList = dbMaterialType.GetMaterialGrpList(matTypeCode, "", "AC");
				if (matGrpList.size() > 0 && !matTypeCode.equals("")) request.setAttribute("matGrpList", matGrpList);
				
				DBMasterTable dbMasterTable = new DBMasterTable();
				List stuffList = dbMasterTable.GetMasterTableDTList("stuf", "", "", "AC");
				if (stuffList.size() > 0) request.setAttribute("stuffList", stuffList);
				
				alertMessage = "กรุณาระบุ วัน เดือน ปี";
				request.setAttribute("alertMessage", alertMessage);
				forwardText 	= "success";
			}
					
				request.setAttribute("matTypeCode", matTypeCode);
				request.setAttribute("matGrpCode", matGrpCode);
				request.setAttribute("matStuffCode", matStuffCode);
				request.setAttribute("loginId", loginId);
				request.setAttribute("stockOnHand", stockOnHand);
		}
			} catch (Exception e) {
				throw new Exception(e.getMessage());
			}
			return  mapping.findForward(forwardText);
		}
	public ActionForward Search(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
		throws Exception { //13-07-2012
			String forwardText 	= "success";
			String loginId 		= "";
			String appCode  	= "mmr2";
			try {
				HttpSession session = request.getSession();
				if (session.isNew()) {
					session.invalidate();
					request.setAttribute("alertMessage","Session Timeout. Login again.");
					return mapping.findForward("relogin");
				} else {
					loginId = (String) session.getAttribute("loginId");
					if (loginId == null) {
						request.setAttribute("alertMessage","Please Login.");
						return mapping.findForward("relogin");
					}
				}
				DBLogin dbLogin = new DBLogin();			
				if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
					request.setAttribute("alertMessage","You don't have authorize.");
					return mapping.findForward("alertmsg");
				}
				
				ReportForm reportForm = (ReportForm) form;
				String fromDate		= reportForm.getFromDate();
				String toDate		= reportForm.getToDate();
				String matTypeCode	= reportForm.getMatTypeCode();
				String matGrpCode	= reportForm.getMatGrpCode();
				String matStuffCode	= reportForm.getMatStuffCode();
				
				DBWarehouse dbWarehouse = new DBWarehouse();
				List warehouseList = dbWarehouse.GetWarehouseList("", "", "AC");
				if (warehouseList.size() > 0) request.setAttribute("warehouseList", warehouseList);
				
				DBMaterialType dbMaterialType = new DBMaterialType();
				String matTypeName = dbMaterialType.GetMaterialTypeName(matTypeCode);
				List matTypeList = dbMaterialType.GetMaterialTypeList("");
				if (matTypeList.size() > 0) request.setAttribute("matTypeList", matTypeList);

		//		String matGrpName = dbMaterialType.GetMaterialGrpName(matTypeCode, matGrpCode, "");
				List matGrpList = dbMaterialType.GetMaterialGrpList(matTypeCode, "", "AC");
				if (matGrpList.size() > 0 && !matTypeCode.equals("")) request.setAttribute("matGrpList", matGrpList);
				
				DBMasterTable dbMasterTable = new DBMasterTable();
				List stuffList = dbMasterTable.GetMasterTableDTList("stuf", "", "", "AC");
				if (stuffList.size() > 0) request.setAttribute("stuffList", stuffList);
				
			} catch (Exception e) {
				throw new Exception(e.getMessage());
			}
			return  mapping.findForward(forwardText);
		}
}