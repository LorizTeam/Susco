/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBMasterTable;
import com.dtac.center.data.DBAddress;
import com.dtac.inventory.data.DBVender;
import com.dtac.inventory.form.VenderForm;
/** 
 * MyEclipse Struts
 * Creation date: 12-04-2012
 */
public class VenderViewAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();		
		map.put("venderform.button.update",	"update");
		return map;
	}

	public ActionForward update(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //18-07-2012
		String forwardText 	= "success";
		String loginId 		= "";
		String appCode  	= "mm07";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "mant")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			//============================ customer ======================
			VenderForm venderForm = (VenderForm) form;
			String venderCode	= new String (venderForm.getVenderCode().getBytes("ISO8859_1"),"utf-8");
			String venderName	= new String(venderForm.getVenderName().getBytes("ISO8859_1"),"utf-8");
			String searchName	= new String(venderForm.getSearchName().getBytes("ISO8859_1"),"utf-8");
			String venderTypeCode = venderForm.getVenderTypeCode();
			String venderTaxId	= new String(venderForm.getVenderTaxId().getBytes("ISO8859_1"),"utf-8");
			String creditLimit	= venderForm.getCreditLimit();
			String creditAvail	= venderForm.getCreditAvail();
			String status		= venderForm.getStatus();
			String pic1			= venderForm.getPic1();
			String pic2			= venderForm.getPic2();
			String pic3			= venderForm.getPic3();
			String pic4			= venderForm.getPic4();
			String pic5			= venderForm.getPic5();
			
			DBVender dbVender = new DBVender();
			dbVender.UpdateVender(venderCode, venderName, searchName, venderTypeCode, 
				venderTaxId, creditLimit, creditAvail, status);

			DBMasterTable dbMasterTable = new DBMasterTable();
			List vendTypeList = dbMasterTable.GetMasterTableDTList("vdty", "", "", "AC");
			if (vendTypeList.size() > 0) request.setAttribute("vendTypeList", vendTypeList);
		
			venderForm.setVenderCode(venderCode);
			venderForm.setVenderName(venderName);
			venderForm.setSearchName(searchName);			
			venderForm.setVenderTaxId(venderTaxId);
			venderForm.setCreditLimit(creditLimit);
			venderForm.setCreditAvail(creditAvail);
			
			String tel1=""; String remark="";
			
			DBAddress dbAddress = new DBAddress();
					//============================register address======================
			String regiAddr1	= new String(venderForm.getRegiAddr1().getBytes("ISO8859_1"),"utf-8");
			String regiAddr2	= new String(venderForm.getRegiAddr2().getBytes("ISO8859_1"),"utf-8");
			String regiAddr3	= new String(venderForm.getRegiAddr3().getBytes("ISO8859_1"),"utf-8");
			String regiCont1	= new String(venderForm.getRegiCont1().getBytes("ISO8859_1"),"utf-8");
			String regiTel1		= new String(venderForm.getRegiTel1().getBytes("ISO8859_1"),"utf-8");
			String regiPosi1	= new String(venderForm.getRegiPosi1().getBytes("ISO8859_1"),"utf-8");
			String regiMob1		= new String(venderForm.getRegiMob1().getBytes("ISO8859_1"),"utf-8");
			String regiFax1		= new String(venderForm.getRegiFax1().getBytes("ISO8859_1"),"utf-8");
			String regiEmail1	= new String(venderForm.getRegiEmail1().getBytes("ISO8859_1"),"utf-8");
			String regiCont2	= new String(venderForm.getRegiCont2().getBytes("ISO8859_1"),"utf-8");
			String regiTel2		= new String(venderForm.getRegiTel2().getBytes("ISO8859_1"),"utf-8");
			String regiPosi2	= new String(venderForm.getRegiPosi2().getBytes("ISO8859_1"),"utf-8");
			String regiMob2		= new String(venderForm.getRegiMob2().getBytes("ISO8859_1"),"utf-8");
			String regiFax2		= new String(venderForm.getRegiFax2().getBytes("ISO8859_1"),"utf-8");
			String regiEmail2	= new String(venderForm.getRegiEmail2().getBytes("ISO8859_1"),"utf-8");			
			String regiRemark	= new String(venderForm.getRegiRemark().getBytes("ISO8859_1"),"utf-8");
			
			
			if (dbAddress.CheckAddress("vend", venderCode, "regi", "01"))
				dbAddress.UpdateAddress("vend", venderCode, "regi", "01", regiAddr1, regiAddr2, regiAddr3,						 
					regiCont1, regiPosi1, regiTel1, regiMob1, regiFax1, regiEmail1,  
					regiCont2, regiPosi2, regiTel2, regiMob2, regiFax2, regiEmail2,
					regiRemark, "", "0");
			else
				dbAddress.AddAddress("vend", venderCode, "regi", "01", regiAddr1, regiAddr2, regiAddr3,						 
						regiCont1, regiPosi1, regiTel1, regiMob1, regiFax1, regiEmail1,  
						regiCont2, regiPosi2, regiTel2, regiMob2, regiFax2, regiEmail2,
						regiRemark, "", "0");

			
				venderForm.set_regiAddress(regiAddr1, regiAddr2, regiAddr3, 
					regiCont1, regiPosi1, regiTel1, regiMob1, regiFax1, regiEmail1, 
					regiCont2, regiPosi2, regiTel2, regiMob2, regiFax2, regiEmail2, regiRemark);
			
			request.setAttribute("pic1", pic1);
			request.setAttribute("pic2", pic2);
			request.setAttribute("pic3", pic3);
			request.setAttribute("pic4", pic4);
			request.setAttribute("pic5", pic5);
			request.setAttribute("venderCode", venderCode);
			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}

}