/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBMasterTable;
import com.dtac.inventory.data.DBCustomer;
import com.dtac.inventory.data.DBVender;
import com.dtac.inventory.form.CustomerForm;
import com.dtac.inventory.form.VenderForm;
/**
 * MyEclipse Struts 
 * Creation date: 12-06-2012
 */
public class CustomerSearchAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();
		map.put("customerform.button.search", 	"search");
		return map;
	}

	public ActionForward search(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //12-06-2012
		String forwardText 	= "success";
		String loginId 		= "";
		//String appCode 		= "pu11";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage", "Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage", "Please Login.");
					return mapping.findForward("relogin");
				}
			}

			CustomerForm customerForm = (CustomerForm) form;
			String customerCode 	= new String(customerForm.getcustomerCode().getBytes("ISO8859_1"), "utf-8");
			String customerName 	= new String(customerForm.getcustomerName().getBytes("ISO8859_1"), "utf-8");
			String searchName 	= new String(customerForm.getSearchName().getBytes("ISO8859_1"), "utf-8");
			String customerTypeCode = customerForm.getcustomerTypeCode();
			
		 

			DBCustomer dbVender = new DBCustomer();
			List customerList = dbVender.GetCustomerMasterList(customerCode, customerName, searchName, customerTypeCode, "AC");
			if (customerList.size() > 0) request.setAttribute("customerList", customerList);
			
			DBMasterTable dbMasterTable = new DBMasterTable();
			List custTypeList = dbMasterTable.GetMasterTableDTList("vdty", "", "", "AC");
			if (custTypeList.size() > 0) request.setAttribute("custTypeList", custTypeList);

			customerForm.setcustomerCode(customerCode);
			customerForm.setcustomerName(customerName);
			customerForm.setSearchName(searchName);
			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return mapping.findForward(forwardText);
	}
}