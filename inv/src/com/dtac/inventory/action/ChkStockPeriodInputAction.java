/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBMonth;
import com.dtac.admin.data.DBYear;
import com.dtac.inventory.data.DBChkStock;
import com.dtac.inventory.data.DBMatDocPeriod;
import com.dtac.inventory.data.DBMaterialType;
import com.dtac.inventory.data.DBWahoLocation;
import com.dtac.inventory.data.DBWarehouse;
import com.dtac.inventory.data.DBWarehouseAuth;
import com.dtac.inventory.form.ChkStockForm;
import com.dtac.inventory.form.WarehouseForm;
/** 
 * MyEclipse Struts
 * Creation date: 22-04-2012
 */
public class ChkStockPeriodInputAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();		
		map.put("checkstockform.button.next",	"next");
		return map;
	}

	public ActionForward next(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //18-10-2012
		String forwardText 	= "success";
		String loginId 		= "";
		String appCode  	= "mm46";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId,appCode,"disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}
			
			ChkStockForm chkStockForm = (ChkStockForm) form;
			String docYear		= chkStockForm.getDocYear();
			String docMonth		= chkStockForm.getDocMonth();
			String wahoCode		= chkStockForm.getWahoCode();
			String wahoName		= "";
			String alertMessage	= "";
			
			DBMatDocPeriod dbMatDocPeriod = new DBMatDocPeriod();
			if (dbMatDocPeriod.CheckMatDocPeriodStatus(docYear, docMonth).equals("CL")) alertMessage = "งวดเอกสารนี้ปิดแล้ว";
			
			DBWarehouse dbWarehouse = new DBWarehouse();
			List warehoueList = dbWarehouse.GetWarehouseList(wahoCode, "", "");
			if (warehoueList.size() == 1){
				WarehouseForm wahoInfo = (WarehouseForm) warehoueList.get(0);
				wahoName = wahoInfo.getWahoName();
			}

			if (!alertMessage.equals("")){
				request.setAttribute("alertMessage", alertMessage);
				
				forwardText 	= "repeat";
				
				DBYear dbYear = new DBYear();
				List yearList = dbYear.GetYearList("","");
				if (yearList.size()>0) request.setAttribute("yearList", yearList);

				DBMonth dbMonth = new DBMonth();
				List monthList  = dbMonth.GetMonthList();
				if (monthList.size() > 0) request.setAttribute("monthList", monthList);
				
				DBWarehouseAuth dbWarehouseAuth = new DBWarehouseAuth();
				List warehouseList = dbWarehouseAuth.GetWarehouseAuth("", loginId, "AC");
				if (warehouseList.size() > 0) request.setAttribute("warehouseList", warehouseList);
			
			} else {
				
				DBWahoLocation dbWahoLocation = new DBWahoLocation();		 	
				List locaList = dbWahoLocation.GetLocationList(wahoCode, "", "AC");
				if (locaList.size() > 0) request.setAttribute("locaList", locaList);
				
				DBMaterialType dbMaterialType = new DBMaterialType();
				List matTypeList = dbMaterialType.GetMaterialTypeList("");
				if (matTypeList.size() > 0) request.setAttribute("matTypeList", matTypeList);
							
				List matGrpList = dbMaterialType.GetMaterialGrpList("", "", "");
				if (matGrpList.size() > 0) request.setAttribute("matGrpList", matGrpList);
				
				DBChkStock dbChkStock = new DBChkStock();
				List matWahoList = dbChkStock.GetMatWahoList(docYear, docMonth, wahoCode, "", "", "", "", "", "");
				if (matWahoList.size() > 0) request.setAttribute("matWahoList", matWahoList);
				
				List chkStockList = dbChkStock.GetChkStockList(docYear, docMonth, wahoCode, "", "", "", "", "", "");
				if (chkStockList.size() > 0) request.setAttribute("chkStockList", chkStockList);
				
				chkStockForm.setWahoName(wahoName);
			}
			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
}