/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBMasterTable;
import com.dtac.admin.data.DBMonth;
import com.dtac.admin.data.DBYear;
import com.dtac.inventory.data.DBMatDocType;
import com.dtac.inventory.data.DBMaterial;
import com.dtac.inventory.data.DBMaterialTake;
import com.dtac.inventory.data.DBMaterialTrans;
import com.dtac.inventory.data.DBMaterialType;
import com.dtac.inventory.data.DBWahoLocation;
import com.dtac.inventory.data.DBWarehouse;
import com.dtac.inventory.data.DBWarehouseAuth;
import com.dtac.inventory.form.MaterialTakeForm;
import com.dtac.utils.DateUtil;
import com.dtac.utils.HistoryMaterial;
import com.dtac.utils.Stock;
/** 
 * MyEclipse Struts
 * Creation date: 12-04-2012
 */
public class MaterialRTNListAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();		
 
		map.put("materialtakeform.button.search",	"search");
		map.put("materialtakeform.button.save",	"save");
	 
		map.put("materialtakeform.button.print",	"print");
		 
		
		return map;
	}
	
	/////// save
	
	public ActionForward save(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //12-05-2012
		String forwardText = "success";
		String loginId 		= "";
		String userName 	= "";
		String appCode  	= "mm42";
	 	String  doctypecode		=   "RTN";
	//	String  docyear			=   "";
	//	String  docmonth		=	"";
	//	String  docno			=   "";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				userName= (String) session.getAttribute("userName");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}
			
			MaterialTakeForm materialTakeForm = (MaterialTakeForm) form;
			String confirm      = materialTakeForm.getConfirm(); // confirm
			String lotno		=	"";
			String matcode     = "";
			String serial		=	materialTakeForm.getMatStuffName();
		 
			String locaCode			=   "";
			String docyear			= 	materialTakeForm.getDocYear();
			String docmonth			= 	materialTakeForm.getDocMonth();
			String docno			=   materialTakeForm.getDocNo();
		 
			 String[] checkbkk 		= request.getParameterValues("checkbkk");	
			 String[] oldwhocode		= request.getParameterValues("oldwhocode");	
			 String[] oldmonth 		= request.getParameterValues("oldmonth");	
			 String[] olddocTypeCode 		= request.getParameterValues("olddocTypeCode");
			 String[] olddocYear 		= request.getParameterValues("olddocYear");
			 String[] olddocNo 		= request.getParameterValues("olddocNo");			 
			 String[] oldMatCode 		= request.getParameterValues("oldMatCode");
			 String[] serialno 	= request.getParameterValues("oldMatStuffName"); // serial no
			 String[] customer		= request.getParameterValues("categories"); // customer code
			 String[] oldmatName 		= request.getParameterValues("oldMatName");
			 String[] quantity 			= request.getParameterValues("quantity");
			 String[] takequantity			= request.getParameterValues("takequantity");	 
			 String[] amount 			= request.getParameterValues("amount");
			 String[] totalamount 		= request.getParameterValues("totalamount");
			
	//		DBWarehouse getwhnme = new DBWarehouse();
			
	//		String wahoName     = getwhnme.GetWarehouseName(wahoCode);
			
	//		String wahoName 		= 	materialTakeForm.getWahoName();
			String custCode    = materialTakeForm.getVendCode();
			String custName =  new String(materialTakeForm.getVendName().getBytes("ISO8859_1"),"utf-8");
			String docbycode = materialTakeForm.getDocbycode();
			String docbyname = materialTakeForm.getDocbyname();
			String docdate = materialTakeForm.getDate();
			String cvdocdate ="";
			//update Quantity
			String alertMessage     = 	"";
			String remark     = 	"";
			
		    // write header record
			DBMaterialTake dbMaterialTake = new DBMaterialTake();
			
			DateUtil dateUtil = new DateUtil();	
			// current date
			String nowDate = dateUtil.CnvToDDMMYYYYThaiYear(dateUtil.CnvToYYYYMMDD(dateUtil.curDate(), '/'));
			DateUtil dt  = new DateUtil();
			cvdocdate= dt.CnvToYYYYMMDD(docdate, '/');
		
			  DBMaterial mat = new   DBMaterial();
		// update return material
			  DBMaterialTrans trn = new DBMaterialTrans();
			  int k =0;
		       for (int i=0; i<checkbkk.length; i++) {
		         	k= Integer.parseInt(checkbkk[i]);
	
	     	//========================= Insert Table Header ===============================
					 
		trn.AddMaterialTranHD("RT", doctypecode, docyear, docno, docmonth, cvdocdate, "RT",custCode, custName, oldwhocode[k],docbycode,docbyname);
								
	    	//=========================================================================	 	         	
		
		// new record insert to table detail
		 String runno = Integer.toString(k);
		 String matname = new String(oldmatName[k].getBytes("ISO8859_1"),"utf-8");
	    trn.AddMaterialTranRTNDT("RT",doctypecode,custCode,oldwhocode[k], docyear, docno,docmonth, cvdocdate, runno,  serialno[k], oldMatCode[k], matname,  takequantity[k], amount[k],olddocYear[k], oldmonth[k],"BRW", olddocNo[k]);	
	    //=================== End Data Base Detail 	         	
		         	
		         // start return product & serial
					
	  mat.receiveMaterial(oldMatCode[k], serialno[k], Integer.parseInt(takequantity[k]),oldwhocode[k]);
				 // end	
	trn.UpdateReturnMaterialTranDT(olddocTypeCode[k] , customer[k], oldwhocode[k], olddocYear[k], olddocNo[k], oldmonth[k], serialno[k], oldMatCode[k], takequantity[k]);           
			  	 				          
			       }
        //			  
				List matTakeHDList = new ArrayList();
				matTakeHDList.add(new MaterialTakeForm("RT",doctypecode, docyear, docmonth, docno, nowDate, "", "", docbycode, docbyname,
					"", "", "", "", "", "", "", "", "", "",
					"", "", "", "", "", custCode, custName, remark, "AC"));
			  
				materialTakeForm.setDocNo(docno);
				materialTakeForm.setVendName(custName);
				materialTakeForm.setDocTypeCode(doctypecode);
				materialTakeForm.setDocbycode(docbycode);
				materialTakeForm.setDocbyname(docbyname);
				materialTakeForm.setWahoName("");
				materialTakeForm.setTakequantity("");
				
				request.setAttribute("matTakeHDList", matTakeHDList);
				
				DBMaterialTrans getdtl = new DBMaterialTrans();	
				if(custCode !=null){
				List itemlist = getdtl.GetMaterialTakeDTList(custCode, "BRW", docyear, docmonth, "","");
				request.setAttribute("itemlist", itemlist);	
				}
 
				materialTakeForm.setMatStuffName("");
		 
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
	
	///////
	/////// save
	
	public ActionForward search(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //12-05-2012
		String forwardText = "success";
		String loginId 		= "";
		String userName 	= "";
		String appCode  	= "mm42";
	 	String  doctypecode		=   "RTN";
	//	String  docyear			=   "";
	//	String  docmonth		=	"";
	//	String  docno			=   "";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				userName= (String) session.getAttribute("userName");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}
			
			MaterialTakeForm materialTakeForm = (MaterialTakeForm) form;
			String confirm      = materialTakeForm.getConfirm(); // confirm
			String lotno		=	"";
			String matcode     = "";
			String serial		=	materialTakeForm.getMatStuffName();
		//	int receiveqty		=	0;
			String locaCode			=   "";
			String docyear			= 	materialTakeForm.getDocYear();
			String docmonth			= 	materialTakeForm.getDocMonth();
			String docno			=   materialTakeForm.getDocNo();
		//	String wahoCode 		= 	materialTakeForm.getWahoCode();
			
		//	DBWarehouse getwhnme = new DBWarehouse();
			
		// wahoName     = getwhnme.GetWarehouseName(wahoCode);
			
	//		String wahoName 		= 	materialTakeForm.getWahoName();
			String custCode    = materialTakeForm.getVendCode();
			String custName =  new String(materialTakeForm.getVendName().getBytes("ISO8859_1"),"utf-8");
			String docbycode = materialTakeForm.getDocbycode();
			String docbyname = materialTakeForm.getDocbyname();
			//update Quantity
			String alertMessage     = 	"";
			String remark     = 	"";
			
		    // write header record
			DBMaterialTake dbMaterialTake = new DBMaterialTake();
			
			DateUtil dateUtil = new DateUtil();	
			// current date
			String nowDate = dateUtil.CnvToDDMMYYYYThaiYear(dateUtil.CnvToYYYYMMDD(dateUtil.curDate(), '/'));
			
		 
				List matTakeHDList = new ArrayList();
				matTakeHDList.add(new MaterialTakeForm("RT",doctypecode, docyear, docmonth, docno, nowDate, "", "", docbycode, docbyname,
					"", "", "", "", "", "", "", "", "", "",
					"", "", "", "", "", custCode, custName, remark, "AC"));
			  
				materialTakeForm.setDocNo(docno);
				materialTakeForm.setVendName(custName);
				materialTakeForm.setDocTypeCode(doctypecode);
				materialTakeForm.setDocbycode(docbycode);
				materialTakeForm.setDocbyname(docbyname);
				materialTakeForm.setWahoName("");
				request.setAttribute("matTakeHDList", matTakeHDList);
				
				DBMaterialTrans getdtl = new DBMaterialTrans();	
				if(custCode !=null){
				List itemlist = getdtl.GetMaterialTakeDTList(custCode, "BRW", docyear, docmonth, "",serial);
				request.setAttribute("itemlist", itemlist);	
				}
 
		 
		 
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
	
	///////	

	public ActionForward print(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
		throws Exception { //23-10-2012
			String forwardText 	= "print";
			String loginId 		= "";
			String appCode  	= "mm42";
			try {
				HttpSession session = request.getSession();
				if (session.isNew()) {
					session.invalidate();
					request.setAttribute("alertMessage","Session Timeout. Login again.");
					return mapping.findForward("relogin");
				} else {
					loginId = (String) session.getAttribute("loginId");
					if (loginId == null) {
						request.setAttribute("alertMessage","Please Login.");
						return mapping.findForward("relogin");
					}
				}
				DBLogin dbLogin = new DBLogin();			
				if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
					request.setAttribute("alertMessage","You don't have authorize.");
					return mapping.findForward("alertmsg");
				}

				MaterialTakeForm materialTakeForm = (MaterialTakeForm) form;
				String doctypecode	= materialTakeForm.getDocTypeCode();
				String docyear		= materialTakeForm.getDocYear();
				String docno		= materialTakeForm.getDocNo();
				String date			= materialTakeForm.getLotno();
				
				DateUtil dateUtil = new DateUtil();
				request.setAttribute("docTypeCode", doctypecode); 
				request.setAttribute("docYear", docyear);
				request.setAttribute("docNo", docno);
				request.setAttribute("date",dateUtil.CnvToYYYYMMDDEngYear(date, '-'));
				
			} catch (Exception e) {
				throw new Exception(e.getMessage());
			}
			return  mapping.findForward(forwardText);
		}
}