/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBMasterTable;
import com.dtac.inventory.data.DBMaterial;
import com.dtac.inventory.data.DBMaterialType;
import com.dtac.inventory.form.MaterialForm;
import com.dtac.utils.DateUtil;
/** 
 * MyEclipse Struts
 * Creation date: 22-04-2012
 */
public class MaterialLOCKAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();		
		map.put("materialform.button.search",	"search");
		map.put("materialform.button.save",	"save");
		return map;
	}

	// search
	public ActionForward search(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //22-04-2012
		String forwardText = "success";
		String loginId 		= "";
		//String appCode  	= "sa11";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			/*DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}*/

			MaterialForm materialForm = (MaterialForm) form;
			String matCode		= materialForm.getMatCode();
			String matName		= new String(materialForm.getMatName().getBytes("ISO8859_1"),"utf-8");
			String salecde  = materialForm.getVendCode();
 
	

			DBMaterial dbMaterial = new DBMaterial();
 
			
			List materialList = dbMaterial.GetMaterialLOCKList(matCode, matName, salecde,"", "","", "", "", "", "", "", "", "");
		 
			if (materialList.size() > 0) request.setAttribute("materialList", materialList);
						
			materialForm.setMatName(matName);
			materialForm.setVendCode("");
			materialForm.setVendName("");
			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
 // end search 
 //  save
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
		throws Exception { //22-04-2012
			String forwardText = "success";
			String loginId 		= "";
			//String appCode  	= "sa11";
			try {
				HttpSession session = request.getSession();
				if (session.isNew()) {
					session.invalidate();
					request.setAttribute("alertMessage","Session Timeout. Login again.");
					return mapping.findForward("relogin");
				} else {
					loginId = (String) session.getAttribute("loginId");
					if (loginId == null) {
						request.setAttribute("alertMessage","Please Login.");
						return mapping.findForward("relogin");
					}
				}
				/*DBLogin dbLogin = new DBLogin();			
				if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
					request.setAttribute("alertMessage","You don't have authorize.");
					return mapping.findForward("alertmsg");
				}*/

				MaterialForm materialForm = (MaterialForm) form;
				String matCode		= materialForm.getMatCode();
				String lockdate   = materialForm.getDate();
				
				DateUtil dt  = new DateUtil();
				 	lockdate= dt.CnvToYYYYMMDD(lockdate, '/');
				
				String matName		= new String(materialForm.getMatName().getBytes("ISO8859_1"),"utf-8");
				String salecde  = materialForm.getVendCode();
				String salenme		= new String(materialForm.getVendName().getBytes("ISO8859_1"),"utf-8");
				
				 String[] checkbkk 		= request.getParameterValues("checkbkk");	
				 String[] lastprdate		= request.getParameterValues("lastprdate");	
				 String[] lsalecde		= request.getParameterValues("lsalecde");	
				 String[] lsalenme		= request.getParameterValues("lsalenme");
				 String[] lmatCode 		= request.getParameterValues("lmatCode");
				 String[] lmatName 		= request.getParameterValues("lmatName");	
				 String[] status 		= request.getParameterValues("status");
				 String[] serial 		= request.getParameterValues("serial");
				 String[] stock1 	= request.getParameterValues("stock1"); // serial no
				 String[] stock2		= request.getParameterValues("stock2"); // customer code
				 String[] stock3		= request.getParameterValues("stock3");
				 String[] stock4 			= request.getParameterValues("stock4");
		 
   
				DBMaterial dbMaterial = new DBMaterial(); 
				
               
				
				
				  int k =0;
			       for (int i=0; i<checkbkk.length; i++) {
			         	k= Integer.parseInt(checkbkk[i]);
		
			         	  // update issue stock
						
			    		dbMaterial.issueLOCKMaterial(status[k],lmatCode[k],lockdate,salecde ,salenme, serial[k], stock1[k], stock2[k]);

						 
	 	         	
			       }
				
				// end
				
				List materialList = dbMaterial.GetMaterialLOCKList(matCode, matName, salecde,"", "","", "", "", "", "", "", "", "");
			 
				if (materialList.size() > 0) request.setAttribute("materialList", materialList);
							
				materialForm.setMatName(matName);
				materialForm.setVendCode("");
				materialForm.setVendName("");
				
			} catch (Exception e) {
				throw new Exception(e.getMessage());
			}
			return  mapping.findForward(forwardText);
		}
	// end save
	
	
}