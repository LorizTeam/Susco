/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBLogin;
import com.dtac.inventory.data.DBWahoLocation;
import com.dtac.inventory.data.DBWarehouse;
import com.dtac.inventory.form.WarehouseForm;
/** 
 * MyEclipse Struts
 * Creation date: 26-04-2012
 */
public class WahoLocationUpdateAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();
		map.put("warehouseform.button.cancel",  "cancel");
		map.put("warehouseform.button.update",  "update");
		return map;
	}
	public ActionForward cancel(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //12-04-2012
		String forwardText = "success";
		String loginId 		= "";
		String appCode  	= "mm22";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			WarehouseForm warehouseForm = (WarehouseForm) form;		
			warehouseForm.initial();
			
			DBWarehouse dbWarehouse = new DBWarehouse();							
			List warehouseList = dbWarehouse.GetWarehouseList("", "", "");
			if (warehouseList.size() > 0) request.setAttribute("warehouseList", warehouseList);
		
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
	public ActionForward update(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) 
	throws Exception {	//02-05-2012
		String forwardText 	= "update";
		String loginId 		= "";
		String appCode  	= "mm22";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId,appCode,"disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			WarehouseForm warehouseForm = (WarehouseForm) form;
			String wahoCode	= warehouseForm.getWahoCode();
			String locaCode	= warehouseForm.getLocaCode();
			String pic1		= "";
			String pic2		= "";
			
			DBWahoLocation dbWahoLocation = new DBWahoLocation ();			
			List wahoLocationList = dbWahoLocation.GetLocationList(wahoCode, locaCode, "");			
			if (wahoLocationList.size() == 1) {
				WarehouseForm wareInfo = (WarehouseForm) wahoLocationList.get(0);
				warehouseForm.setWahoCode(wareInfo.getWahoCode());
				warehouseForm.setWahoName(wareInfo.getWahoName());
				warehouseForm.setWahoStatus(wareInfo.getWahoStatus());
				warehouseForm.setLocaCode(wareInfo.getLocaCode());
				warehouseForm.setLocaName(wareInfo.getLocaName());
				warehouseForm.setLocaStatus(wareInfo.getLocaStatus());
				warehouseForm.setPic1(wareInfo.getPic1());
				warehouseForm.setPic2(wareInfo.getPic2());
				
				pic1 = wareInfo.getPic1();
				pic2 = wareInfo.getPic2();
				
			}
			
			request.setAttribute("pic1", pic1);
			request.setAttribute("pic2", pic2);
			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
}