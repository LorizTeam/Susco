/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dtac.admin.data.DBLogin;
import com.dtac.inventory.data.DBWarehouse;
import com.dtac.inventory.data.DBWarehouseAuth;
import com.dtac.inventory.form.WarehouseForm;
/** 
 * MyEclipse Struts
 * Creation date: 12-06-2012
 */
public class WarehouseAuthSetupAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) 
	throws Exception {	//25-04-2012
		String forwardText 	= "success";
		String loginId 		= "";
		String appCode  	= "mm22";		
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId,appCode,"disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			WarehouseForm warehouseForm = (WarehouseForm) form;
			warehouseForm.initial();
			
			String wahoCode = "";
			if (request.getParameter("wahoCode") != null) wahoCode  = request.getParameter("wahoCode");
						
			String wahoName = "";
			
			DBWarehouse dbWarehouse = new DBWarehouse();
			if (dbWarehouse.GetWarehouseList(wahoCode, "", "AC").size() != 1) {
				forwardText = "alertmsg";
				request.setAttribute("alertMessage", "ตรวจสอบคลังสินค้าที่เลือก");
			} else
				wahoName = dbWarehouse.GetWarehouseName(wahoCode);
			
			DBWarehouseAuth dbWarehouseAuth = new DBWarehouseAuth();
			List warehouseAuthList = dbWarehouseAuth.GetWarehouseAuth(wahoCode, "", "AC");
			if (warehouseAuthList.size() > 0) request.setAttribute("warehouseAuthList", warehouseAuthList);

			List notAuthList = dbWarehouseAuth.GetEmployeeNotInWarehouseAuth(wahoCode);
			if (notAuthList.size() > 0) request.setAttribute("notAuthList", notAuthList);

			warehouseForm.setWahoCode(wahoCode);
			warehouseForm.setWahoName(wahoName);
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
}