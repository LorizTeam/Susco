/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBMasterTable;
import com.dtac.admin.data.DBMonth;
import com.dtac.admin.data.DBYear;
import com.dtac.inventory.data.DBMatDocPeriod;
import com.dtac.inventory.data.DBMatDocType;
import com.dtac.inventory.data.DBMaterial;
 
import com.dtac.inventory.data.DBMaterialTake;
import com.dtac.inventory.data.DBMaterialType;
import com.dtac.inventory.data.DBWahoLocation;
import com.dtac.inventory.data.DBWarehouse;
import com.dtac.inventory.data.DBWarehouseAuth;
import com.dtac.inventory.form.MatDocPeriodForm;
import com.dtac.inventory.form.MaterialForm;
import com.dtac.inventory.form.MaterialRetuForm;
import com.dtac.inventory.form.MaterialTakeForm;
import com.dtac.inventory.form.WarehouseForm;
import com.dtac.utils.DateUtil;
;
/** 
 * MyEclipse Struts
 * Creation date: 22-07-2012
 */
public class MaterialChangeListStartAction extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) 
		throws Exception {	//30-04-2012
			String forwardText 	= "success";
			String loginId 		= "";
			String appCode  	= "mm42";		
			try {
				HttpSession session = request.getSession();
				if (session.isNew()) {
					session.invalidate();
					request.setAttribute("alertMessage","Session Timeout. Login again.");
					return mapping.findForward("relogin");
				} else {
					loginId = (String) session.getAttribute("loginId");
					if (loginId == null) {
						request.setAttribute("alertMessage","Please Login.");
						return mapping.findForward("relogin");
					}
				}
				DBLogin dbLogin = new DBLogin();			
				if (!dbLogin.CheckAppAuth(loginId,appCode,"disp")) {
					request.setAttribute("alertMessage","You don't have authorize.");
					return mapping.findForward("alertmsg");
				}
		
				MaterialTakeForm materialTakeForm = (MaterialTakeForm) form;
				
				String docYear		= "";	
				String docMonth		= "";
				String docTypeCode 	= "CHG";
				String wahoCode 	= materialTakeForm.getWahoCode();
				if(wahoCode==null) wahoCode = "";
				String alertMessage = "";
				if (session.getAttribute("docYear") != null) 	docYear = (String) session.getAttribute("docYear");
				if (session.getAttribute("docMonth") != null) 	docMonth = (String) session.getAttribute("docMonth");
				
				if (docYear.equals("") || docMonth.equals("")) {
					DBMatDocPeriod dbMatDocPeriod = new DBMatDocPeriod();
					List matDocPeriodList = dbMatDocPeriod.GetCurrMatDocPeriod();
					if (matDocPeriodList.size() == 1) {
						MatDocPeriodForm periodInfo = (MatDocPeriodForm) matDocPeriodList.get(0);
						docYear	= periodInfo.getYear();
						docMonth= periodInfo.getMonth();
					}				
				}
				
				DBWarehouseAuth dbWarehouseAuth = new DBWarehouseAuth();
				List warehouseAuth = dbWarehouseAuth.GetWarehouseAuth(wahoCode, loginId, "AC");
				if (warehouseAuth.size() == 1) {				
					alertMessage = "คุณไม่มีสิทธิ์ทำงานคลังสินค้า";
				} else {
					warehouseAuth = dbWarehouseAuth.GetWarehouseAuthList("A1","B1","","","", loginId, "AC");
					if (warehouseAuth.size() > 0) request.setAttribute("warehouseAuth", warehouseAuth);
				}	
				
				DBMatDocType dbMatDocType = new DBMatDocType();
				List matDocTypeList = dbMatDocType.GetMatDocTypeList("issu", "CHG", "AC");
				if (matDocTypeList.size() > 0) request.setAttribute("matDocTypeList", matDocTypeList);
				
				DBYear dbYear = new DBYear();
				List yearList = dbYear.GetYearList("","");
				if (yearList.size()>0) request.setAttribute("yearList", yearList);
							
				DBMonth dbMonth = new DBMonth();
				List monthList  = dbMonth.GetMonthList();
				if (monthList.size() > 0) request.setAttribute("monthList", monthList);
				
				DBMaterialType dbMaterialType = new DBMaterialType();
				List matTypeList = dbMaterialType.GetMaterialTypeList("");
				if (matTypeList.size() > 0) request.setAttribute("matTypeList", matTypeList);
				
				DBMaterialTake dbMaterialTake = new DBMaterialTake();
				List matCategorieList = dbMaterialTake.GetMaterialCategoriesList();
				if (matCategorieList.size() > 0) request.setAttribute("matCategorieList", matCategorieList);
				
				List matTakeHDList = dbMaterialTake.GetMaterialTakeHDList(docTypeCode, docYear, docMonth, "", "AC", "", "", "", "", "");
				if (matTakeHDList.size() > 0) request.setAttribute("matTakeHDList", matTakeHDList);
				
				DBMasterTable dbMasterTable = new DBMasterTable();
				List orderTypeList = dbMasterTable.GetMasterTableDTList("odty", "", "", "AC");
				if (orderTypeList.size() > 0) request.setAttribute("orderTypeList", orderTypeList);
				
				DateUtil dateUtil = new DateUtil();
				String curDate = dateUtil.CnvToDDMMYYYYThaiYear(dateUtil.CnvToYYYYMMDD(dateUtil.curDate(), '/'));
				materialTakeForm.setDate(curDate);
				materialTakeForm.setLotno(curDate);
				
				//materialTakeForm.setDocTypeCode(docTypeCode);
				materialTakeForm.setDocYear(docYear);
				materialTakeForm.setDocMonth(docMonth);
			 
				
			} catch (Exception e) {
				throw new Exception(e.getMessage());

			}
			return  mapping.findForward(forwardText);
		}
	}