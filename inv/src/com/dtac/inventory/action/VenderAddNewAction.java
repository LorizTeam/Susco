/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBMasterTable;
import com.dtac.inventory.data.DBVender;
import com.dtac.inventory.form.VenderForm;
/** 
 * MyEclipse Struts
 * Creation date: 12-04-2012
 */
public class VenderAddNewAction extends LookupDispatchAction {

	protected Map getKeyMethodMap() {
		Map map = new HashMap();		
		map.put("venderform.button.adddata",	"adddata");
		map.put("venderform.button.cancel",		"cancel");
		return map;
	}

	public ActionForward adddata(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //18-07-2012
		String forwardText 	= "success";
		String loginId 		= "";
		String appCode  	= "mm07";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			VenderForm venderForm = (VenderForm) form;
			String venderCode	= new String(venderForm.getVenderCode().getBytes("ISO8859_1"),"utf-8");
			String venderName	= new String(venderForm.getVenderName().getBytes("ISO8859_1"),"utf-8");
			String searchName	= new String(venderForm.getSearchName().getBytes("ISO8859_1"),"utf-8");
						
			DBVender dbVender = new DBVender();
			if (dbVender.GetVenderMaster(venderCode).size()==0)
			
				dbVender.AddVenderMaster(venderCode, venderName, searchName);
			
			else {
				forwardText = "repeat";
				request.setAttribute("alertMessage", "à¸žà¸šà¸£à¸«à¸±à¸ªà¸œà¸¹à¹‰à¸‚à¸²à¸¢à¹ƒà¸™à¸£à¸°à¸šà¸šà¹�à¸¥à¹‰à¸§");
			}
			
			DBMasterTable dbMasterTable = new DBMasterTable();		
			List vendTypeList = dbMasterTable.GetMasterTableDTList("vdty", "", "", "AC");
			if (vendTypeList.size() > 0) request.setAttribute("vendTypeList", vendTypeList);

			venderForm.setVenderCode(venderCode);
			venderForm.setVenderName(venderName);
			venderForm.setSearchName(searchName);
			venderForm.setCreditLimit("0");
			venderForm.setCreditAvail("0");				
			
			session.setAttribute("venderCode", venderCode);
			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
	public ActionForward cancel(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response)
	throws Exception { //18-07-2012
		String forwardText 	= "cancel";
		String loginId 		= "";
		String appCode  	= "mm07";
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId, appCode, "disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}
       			
			VenderForm venderForm = (VenderForm) form;
			venderForm.initial();
			
			String venderCode	= "";
			if (session.getAttribute("custCode") != null) venderCode = (String) session.getAttribute("venderCode");

			DBVender dbVender = new DBVender();
			List venderList = dbVender.GetVenderMasterList(venderCode, "", "", "", "");
			if (venderList.size() > 0) request.setAttribute("venderList", venderList);

			DBMasterTable dbMasterTable = new DBMasterTable();
			List vendTypeList = dbMasterTable.GetMasterTableDTList("vdty", "", "", "AC");
			if (vendTypeList.size() > 0) request.setAttribute("vendTypeList", vendTypeList);
			
			venderForm.setVenderCode(venderCode);			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
}