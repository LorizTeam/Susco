/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dtac.inventory.action;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dtac.admin.data.DBLogin;
import com.dtac.admin.data.DBMonth;
import com.dtac.admin.data.DBYear;
import com.dtac.inventory.data.DBMatDocPeriod;
import com.dtac.inventory.data.DBWarehouseAuth;
import com.dtac.inventory.form.ChkStockForm;
import com.dtac.inventory.form.MatDocPeriodForm;
/** 
 * MyEclipse Struts
 * Creation date: 18-10-2012
 */
public class ChkStockPeriodInputStartAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) 
	throws Exception {	//18-10-2012
		String forwardText 	= "success";
		String loginId 		= "";
		String appCode  	= "mm46";		
		try {
			HttpSession session = request.getSession();
			if (session.isNew()) {
				session.invalidate();
				request.setAttribute("alertMessage","Session Timeout. Login again.");
				return mapping.findForward("relogin");
			} else {
				loginId = (String) session.getAttribute("loginId");
				if (loginId == null) {
					request.setAttribute("alertMessage","Please Login.");
					return mapping.findForward("relogin");
				}
			}
			DBLogin dbLogin = new DBLogin();			
			if (!dbLogin.CheckAppAuth(loginId,appCode,"disp")) {
				request.setAttribute("alertMessage","You don't have authorize.");
				return mapping.findForward("alertmsg");
			}

			ChkStockForm chkStockForm = (ChkStockForm) form;
			String docYear		= "";	
			String docMonth		= "";
			
			if (session.getAttribute("docYear") != null) 	docYear = (String) session.getAttribute("docYear");
			if (session.getAttribute("docMonth") != null) 	docMonth = (String) session.getAttribute("docMonth");
			
			if (docYear.equals("") || docMonth.equals("")) {
				DBMatDocPeriod dbMatDocPeriod = new DBMatDocPeriod();
				List matDocPeriodList = dbMatDocPeriod.GetCurrMatDocPeriod();
				if (matDocPeriodList.size() == 1) {
					MatDocPeriodForm periodInfo = (MatDocPeriodForm) matDocPeriodList.get(0);
					docYear	= periodInfo.getYear();
					docMonth= periodInfo.getMonth();
				}				
			}
			
			DBYear dbYear = new DBYear();
			List yearList = dbYear.GetYearList("","");
			if (yearList.size()>0) request.setAttribute("yearList", yearList);

			DBMonth dbMonth = new DBMonth();
			List monthList  = dbMonth.GetMonthList();
			if (monthList.size() > 0) request.setAttribute("monthList", monthList);
			
			DBWarehouseAuth dbWarehouseAuth = new DBWarehouseAuth();
			List warehouseList = dbWarehouseAuth.GetWarehouseAuth("", loginId, "AC");
			if (warehouseList.size() > 0) request.setAttribute("warehouseList", warehouseList);
			
			chkStockForm.setDocYear(docYear);
			chkStockForm.setDocMonth(docMonth);
			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
		return  mapping.findForward(forwardText);
	}
}